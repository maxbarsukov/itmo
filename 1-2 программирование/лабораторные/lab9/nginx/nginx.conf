server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name api.followy.ru www.api.followy.ru;

    # RSA certificate
    ssl_certificate /etc/letsencrypt/live/api.followy.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.followy.ru/privkey.pem;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    root /home/deploy/apps/tollowy/public;

    try_files $uri/index.html $uri @app;

    location /itmoptics/ {
        proxy_pass http://127.0.0.1:5600;
    }

    # deny requests for files that should never be accessed
    location ~ /\. {
        deny all;
    }

    location ~* ^.+\.(rb|log)$ {
        deny all;
    }

    # serve static (compiled) assets directly if they exist (for rails production)
    location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
        try_files $uri @app;

        access_log off;
        gzip_static on;

        expires max;
        add_header Cache-Control public;

        # Some browsers still send conditional-GET requests if there's a
        # Last-Modified header or an ETag header even if they haven't
        # reached the expiry date sent in the Expires header.
        add_header Last-Modified "";
        add_header ETag "";
        break;
    }

    location /sidekiq {
        proxy_set_header X-Script-Name /sidekiq;
        proxy_pass http://app/sidekiq;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location = /nginx_status {
        stub_status  on;
        default_type text/plain;
        access_log   off;
        allow        127.0.0.1;
        deny all;
    }

    # send non-static file requests to the app server
    location / {
        try_files $uri @app;
    }

    location @app {
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;

        proxy_read_timeout 150;
        proxy_pass http://app;
        # proxy_redirect off;
    }

    client_max_body_size 100m;

}



server {
    if ($host = api.followy.ru) {
        return 301 https://$host$request_uri;
    }


    listen 80 default_server;
    listen [::]:80 default_server;

    server_name api.followy.ru www.api.followy.ru;
    return 404;
}
