Products = Products

AuthTitle = Authorization
LoginField = Login
PasswordField = Password
SignUpButton = Sign Up
LanguageLabel = Language:
UserLabel = User:

Owner = Owner
Name = Name
CreationDate = Creation date
Price = Price
PartNumber = Part number
UnitOfMeasure = Unit of measure

Manufacturer = Manufacturer
ManufacturerId = Manufacturer ID
ManufacturerName = Manufacturer name
ManufacturerEmployeesCount = Manufacturer employees count
ManufacturerType = Manufacturer type
ManufacturerStreet = Manufacturer street
ManufacturerZipCode = Manufacturer zip code
HasManufacturer = Has manufacturer?

TableTab = Table
VisualTab = Visualization

Exit = Exit
Help = Help
Add = Add
Update = Update
RemoveByID = Remove by ID
Clear = Clear
ExecuteScript = Execute script
Head = Head
AddIfMax = Add if max
AddIfMin = Add if min
SumOfPrice = Sum of price
FilterByPrice = Filter by price
FilterContainsPartNumber = Filter contains part number

CancelButton = Cancel
EditTitle = Editing
Info = Info
Error = Error

DialogPrice = Price:

UpdateSuc = Item value updated successfully.
UpdateErr = Failed to update item value.
ClearSuc = The collection has been cleared successfully.
ClearErr = Failed to clear the collection.

FilterByPriceResult = Elements ({0}) whose price value is equal to entered value:\n
FilterContainsPartNumberResult = Elements ({0}) whose part number contains the entered value:\n
SumOfPriceResult = Sum of product prices: {0}.
HeadResult = Top product:\n

InvalidProduct = Product fields are invalid. Please, check that:\n\
- name, coordinates aren't empty;\n\
- price > 0;\n\
- if manufacturer exists, manufacturer name and street aren't empty, employeesCount > 0 and zipCode length > 5;

HelpResult =\
add {element}\t\t\t\t\tadd a new element to the collection\n\
sum_of_price\t\t\t\t\t\tdisplay the sum of the price field values for all elements of the collection\n\
add_if_min {element}\t\t\t\t\tadd a new element to the collection if its price is less than the minimum price of this collection\n\
clear\t\t\t\t\t\t\tclear the collection\n\
update <ID> {element}\t\t\t\t\tupdate the value of the collection element by ID\n\
remove_by_id <ID>\t\t\t\t\tremove an element from the collection by ID\n\
add_if_max {element}\t\t\t\t\tadd a new element to the collection if its price exceeds the maximum price of this collection\n\
head\t\t\t\t\t\t\tdisplay the first element of the collection\n\
help\t\t\t\t\t\t\t\tdisplay help on available commands\n\
filter_contains_part_number <PN>\tdisplay elements whose partNumber field value contains the given substring\n\
filter_by_price <PRICE>\t\t\t\t\tdisplay elements whose price field value is equal to the specified value\n\
info\t\t\t\t\t\t\t\tdisplay information about the collection

InfoResult =\
Collection Information:\n\
Type: {0}\n\
Number of elements: {1}\n\
Last save date: {2}\n\
Last initialization date: {3}

RegisterSuccess = Registration completed successfully!
UserAlreadyExists = A user with this login is already registered.
SignInError = Sorry, the login/password is incorrect.
InvalidCredentials = The name must be between 1 and 40 characters, the password must not be empty.
UnavailableError = Unfortunately, the server is currently unavailable.
NumberFormatException = Bad number format.

FilterByPriceError = Unable to filter products by price.
FilterContainsPartNumberError = Failed to filter products by number part.
SumOfPriceError = Failed to get sum of product prices.
HeadError = Failed to get top product.
